<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApi</name>
    </assembly>
    <members>
        <member name="M:Helpdesk.WebAPI.Areas.Tickets.Controllers.TicketActionsController.CloseTicket(System.Int32)">
            <summary>
            Close a ticket
            </summary>
            <remarks>
            Close a Ticket
            </remarks>
            <param name="ticketId">Unique identifier of the ticket.</param>
            <returns>Action result</returns>
            <response code="200">Ticket was succesfully closed.</response>
            <response code="400">Request was not valid.</response>
        </member>
        <member name="M:Helpdesk.WebAPI.Areas.Tickets.Controllers.TicketActionsController.PauseTicket(System.Int32)">
            <summary>
            Pause a ticket
            </summary>
            <remarks>
            Pause a Ticket
            </remarks>
            <param name="ticketId">Unique identifier of the ticket.</param>
            <returns>Action result</returns>
            <response code="200">Ticket was succesfully paused.</response>
            <response code="400">Request was not valid.</response>
        </member>
        <member name="M:Helpdesk.WebAPI.Areas.Tickets.Controllers.TicketActionsController.ReopenTicket(System.Int32)">
            <summary>
            Reopen a ticket
            </summary>
            <remarks>
            Reopen a Ticket
            </remarks>
            <param name="ticketId">Unique identifier of the ticket.</param>
            <returns>Action result</returns>
            <response code="200">Ticket was succesfully reopend.</response>
            <response code="400">Request was not valid.</response>
        </member>
        <member name="M:Helpdesk.WebAPI.Areas.Tickets.Controllers.TicketActionsController.ResolveTicket(System.Int32)">
            <summary>
            Resolve a ticket
            </summary>
            <remarks>
            Resolve a Ticket
            </remarks>
            <param name="ticketId">Unique identifier of the ticket.</param>
            <returns>Action result</returns>
            <response code="200">Ticket was succesfully resolved.</response>
            <response code="400">Request was not valid.</response>
        </member>
        <member name="M:Helpdesk.WebAPI.Areas.Tickets.Controllers.TicketActionsController.StartTicket(System.Int32)">
            <summary>
            Start a ticket
            </summary>
            <remarks>
            Start a Ticket
            </remarks>
            <param name="ticketId">Unique identifier of the ticket.</param>
            <returns>Action result</returns>
            <response code="200">Ticket was succesfully startd.</response>
            <response code="400">Request was not valid.</response>
        </member>
        <member name="M:Helpdesk.WebAPI.Areas.Tickets.Controllers.TicketActionsController.LinkTicket(Helpdesk.DomainModels.TicketLinks.LinkTicket)">
            <summary>
            Link tickets
            </summary>
            <remarks>
            Link a ticket to another ticket
            </remarks>
            <returns>Action result</returns>
            <response code="200">Tickets were succesfully linked.</response>
            <response code="400">Request was not valid.</response>
        </member>
        <member name="M:Helpdesk.WebAPI.Areas.Tickets.Controllers.TicketActionsController.UnlinkTicket(Helpdesk.DomainModels.TicketLinks.UnlinkTicket)">
            <summary>
            Unlink tickets
            </summary>
            <remarks>
            Unlink a ticket from another ticket
            </remarks>
            <returns>Action result</returns>
            <response code="200">Tickets were succesfully unlinked.</response>
            <response code="400">Request was not valid.</response>
        </member>
        <member name="M:Helpdesk.WebAPI.Areas.Tickets.Controllers.TicketManagementController.OpenTicket(Helpdesk.DomainModels.Tickets.NewTicket)">
            <summary>
            Open a ticket
            </summary>
            <remarks>
            Open a new Ticket
            </remarks>
            <param name="newTicket">Details of the new ticket.</param>
            <returns>Action result</returns>
            <response code="201">Ticket was succesfully opened.</response>
            <response code="400">Request was not valid.</response>
        </member>
        <member name="M:Helpdesk.WebAPI.Areas.Tickets.Controllers.TicketManagementController.DeleteTicket(System.Int32)">
            <summary>
            Delete a ticket
            </summary>
            <remarks>
            Delete a Ticket
            </remarks>
            <param name="ticketId">Unique identifier of the ticket</param>
            <returns>Action result</returns>
            <response code="200">Ticket was succesfully deleted.</response>
            <response code="400">Request was not valid.</response>
        </member>
        <member name="M:Helpdesk.WebAPI.Areas.Tickets.Controllers.TicketManagementController.UpdateTicket(System.Int32,Helpdesk.DomainModels.Tickets.EditTicket)">
            <summary>
            Update a ticket
            </summary>
            <remarks>
            Update a Ticket
            </remarks>
            <param name="ticketId">Unique identifier of the ticket</param>
            <param name="updateTicket">Updated details for the ticket</param>
            <returns>Action result</returns>
            <response code="200">Ticket was succesfully updated.</response>
            <response code="400">Request was not valid.</response>
        </member>
        <member name="M:Helpdesk.WebAPI.Areas.Tickets.Controllers.TicketQueriesController.GetTicket(System.Int32)">
            <summary>
            Get a ticket
            </summary>
            <remarks>
            Get the full details for a ticket
            </remarks>
            <param name="ticketId">Unique identifier of the ticket</param>
            <returns>Action result</returns>
            <response code="200">Ticket details.</response>
        </member>
        <member name="M:Helpdesk.WebAPI.Areas.Tickets.Controllers.TicketQueriesController.LookupTickets(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{Helpdesk.Domain.Tickets.Enums.TicketStatus},System.Nullable{Helpdesk.Domain.Tickets.Enums.Severity},System.Nullable{Helpdesk.Domain.Tickets.Enums.Priority},System.Nullable{Helpdesk.DomainModels.Tickets.Enums.SortTicketsBy})">
            <summary>
            Lookup tickets
            </summary>
            <remarks>
            Lookup a set of tickets
            </remarks>
            <param name="createdAfter">Filter to tickets created after specified date</param>
            <param name="createdBefore">Filter to tickets created before specified date</param>
            <param name="searchyBy">Filter to tickets whose Name contains the specified term</param>
            <param name="ticketIds">Filter to only the tickets whose TicketId is contained within specified ticketIds</param>
            <param name="filterByStatus">Filter to tickets whose status match the specified status</param>
            <param name="filterBySeverity">Filter to tickets whose severity match the specified severity</param>
            <param name="filterByPriority">Filter to tickets whose priority match the specified priority</param>
            <param name="sortBy">Sort the tickets by the specified value</param>
            <returns>Action result</returns>
            <response code="200">Ticket was succesfully opened.</response>
        </member>
        <member name="M:Helpdesk.WebAPI.Areas.Tickets.Controllers.TicketQueriesController.PagedTicketLookup(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{Helpdesk.Domain.Tickets.Enums.TicketStatus},System.Nullable{Helpdesk.Domain.Tickets.Enums.Severity},System.Nullable{Helpdesk.Domain.Tickets.Enums.Priority},System.Nullable{Helpdesk.DomainModels.Tickets.Enums.SortTicketsBy})">
            <summary>
            Paged tickets lookup
            </summary>
            <remarks>
            Page through a set of tickets
            </remarks>
            <param name="createdAfter">Filter to tickets created after specified date</param>
            <param name="createdBefore">Filter to tickets created before specified date</param>
            <param name="searchyBy">Filter to tickets whose Name contains the specified term</param>
            <param name="ticketIds">Filter to only the tickets whose TicketId is contained within specified ticketIds</param>
            <param name="filterByStatus">Filter to tickets whose status match the specified status</param>
            <param name="filterBySeverity">Filter to tickets whose severity match the specified severity</param>
            <param name="filterByPriority">Filter to tickets whose priority match the specified priority</param>
            <param name="sortBy">Sort the tickets by the specified value</param>
            <returns>Action result</returns>
            <response code="200">Ticket was succesfully opened.</response>
        </member>
    </members>
</doc>
